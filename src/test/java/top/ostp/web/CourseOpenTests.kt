package top.ostp.web

import org.junit.jupiter.api.Test
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.boot.test.context.SpringBootTest
import top.ostp.web.mapper.BookMapper
import top.ostp.web.mapper.CourseMapper
import top.ostp.web.mapper.CourseOpenMapper
import top.ostp.web.mapper.TeacherMapper

@SpringBootTest
class CourseOpenTests {
    @Autowired
    lateinit var courseMapper: CourseMapper

    @Autowired
    lateinit var bookMapper: BookMapper

    @Autowired
    lateinit var teacherMapper: TeacherMapper

    @Autowired
    lateinit var courseOpenMapper: CourseOpenMapper

    @Test
    fun selectAll() {
        courseOpenMapper.selectAll().forEach(::println)
    }

    @Test
    fun selectByTeacher() {
        val teacher = teacherMapper.selectById("123456")!!
        println("by teacher")
        val courseOpens0 = courseOpenMapper.selectByTeacher(teacher)
        courseOpens0.forEach(::println)

        println("by teacher and year semester")
        val courseOpens1 = courseOpenMapper.selectByTeacherAndYearSemester(teacher, 2020, 6)
        courseOpens1.forEach(::println)
    }

    @Test
    fun selectByCourse() {
        val course = courseMapper.selectById("G101012")!!
        val courses = courseOpenMapper.selectByCourse(course)
        courses.forEach(::println)
    }

    @Test
    fun selectByBook() {
        val book = bookMapper.selectByISBN("9787-212-222-333")!!
        val courses = courseOpenMapper.selectByBook(book)
        courses.forEach(::println)
    }

    @Test
    fun selectByYearAndSemester() {
        val courses = courseOpenMapper.selectByYearSemester(2020, 3)
        courses.forEach(::println)
    }

    @Test
    fun selectByBookAndStudent() {
        val courses = courseOpenMapper.selectByBookAndStudent("9787-212-222-333", "201806061201")
        courses.forEach(::println)
    }


    @Test
    fun selectByMajorAndYearSemester() {
        val orders = courseOpenMapper.selectByMajorAndYearSemester(14, 2020, 1)
        orders.forEach(::println)
    }
}